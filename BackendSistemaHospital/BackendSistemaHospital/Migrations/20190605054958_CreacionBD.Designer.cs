// <auto-generated />
using System;
using BackendSistemaHospital.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackendSistemaHospital.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190605054958_CreacionBD")]
    partial class CreacionBD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackendSistemaHospital.Models.Consulta", b =>
                {
                    b.Property<int>("IdConsulta")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConsultorioIdConsultorio");

                    b.Property<DateTime>("HoraFin");

                    b.Property<DateTime>("HoraInicio");

                    b.Property<int?>("PersonaIdPersona");

                    b.Property<int>("RecetaForeignKey");

                    b.HasKey("IdConsulta");

                    b.HasIndex("ConsultorioIdConsultorio");

                    b.HasIndex("PersonaIdPersona");

                    b.HasIndex("RecetaForeignKey")
                        .IsUnique();

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("BackendSistemaHospital.Models.Consultorio", b =>
                {
                    b.Property<int>("IdConsultorio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .IsRequired();

                    b.Property<string>("NumeroConsultorio")
                        .IsRequired();

                    b.Property<int>("PersonaForeignKey");

                    b.HasKey("IdConsultorio");

                    b.HasIndex("PersonaForeignKey")
                        .IsUnique();

                    b.ToTable("Consultorio");
                });

            modelBuilder.Entity("BackendSistemaHospital.Models.Cuenta", b =>
                {
                    b.Property<int>("IdCuenta")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contrasena")
                        .IsRequired();

                    b.Property<string>("NombreUsuario")
                        .IsRequired();

                    b.Property<int>("PersonaForeignKey");

                    b.HasKey("IdCuenta");

                    b.HasIndex("PersonaForeignKey")
                        .IsUnique();

                    b.ToTable("Cuenta");
                });

            modelBuilder.Entity("BackendSistemaHospital.Models.Medicamento", b =>
                {
                    b.Property<int>("IdMedicamento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad");

                    b.Property<string>("Compuesto")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("Presentacion")
                        .IsRequired();

                    b.HasKey("IdMedicamento");

                    b.ToTable("Medicamento");
                });

            modelBuilder.Entity("BackendSistemaHospital.Models.MedicamentoTratamiento", b =>
                {
                    b.Property<int>("MedicamentoId");

                    b.Property<int>("TratamientoId");

                    b.HasKey("MedicamentoId", "TratamientoId");

                    b.HasIndex("TratamientoId");

                    b.ToTable("MedicamentoTratamiento");
                });

            modelBuilder.Entity("BackendSistemaHospital.Models.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired();

                    b.Property<string>("Correo")
                        .IsRequired();

                    b.Property<DateTime>("FechaNacimiento");

                    b.Property<string>("Genero")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("Rol")
                        .IsRequired();

                    b.Property<string>("Telefono")
                        .IsRequired();

                    b.HasKey("IdPersona");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("BackendSistemaHospital.Models.Receta", b =>
                {
                    b.Property<int>("IdReceta")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Observaciones")
                        .IsRequired();

                    b.HasKey("IdReceta");

                    b.ToTable("Receta");
                });

            modelBuilder.Entity("BackendSistemaHospital.Models.SignoVital", b =>
                {
                    b.Property<int>("IdSignoVital")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Estatura");

                    b.Property<DateTime>("Fecha");

                    b.Property<int?>("PersonaIdPersona");

                    b.Property<double>("Peso");

                    b.Property<double>("Presion");

                    b.Property<double>("Temperatura");

                    b.HasKey("IdSignoVital");

                    b.HasIndex("PersonaIdPersona");

                    b.ToTable("SignoVital");
                });

            modelBuilder.Entity("BackendSistemaHospital.Models.Tratamiento", b =>
                {
                    b.Property<int>("IdTratamiento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad");

                    b.Property<string>("Frecuencia")
                        .IsRequired();

                    b.Property<int?>("RecetaIdReceta");

                    b.Property<string>("Tiempo")
                        .IsRequired();

                    b.HasKey("IdTratamiento");

                    b.HasIndex("RecetaIdReceta");

                    b.ToTable("Tratamiento");
                });

            modelBuilder.Entity("BackendSistemaHospital.Models.Consulta", b =>
                {
                    b.HasOne("BackendSistemaHospital.Models.Consultorio", "Consultorio")
                        .WithMany("Consultas")
                        .HasForeignKey("ConsultorioIdConsultorio");

                    b.HasOne("BackendSistemaHospital.Models.Persona", "Persona")
                        .WithMany("Consultas")
                        .HasForeignKey("PersonaIdPersona");

                    b.HasOne("BackendSistemaHospital.Models.Receta", "Receta")
                        .WithOne("Consulta")
                        .HasForeignKey("BackendSistemaHospital.Models.Consulta", "RecetaForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BackendSistemaHospital.Models.Consultorio", b =>
                {
                    b.HasOne("BackendSistemaHospital.Models.Persona", "Persona")
                        .WithOne("Consultorio")
                        .HasForeignKey("BackendSistemaHospital.Models.Consultorio", "PersonaForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BackendSistemaHospital.Models.Cuenta", b =>
                {
                    b.HasOne("BackendSistemaHospital.Models.Persona", "Persona")
                        .WithOne("Cuenta")
                        .HasForeignKey("BackendSistemaHospital.Models.Cuenta", "PersonaForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BackendSistemaHospital.Models.MedicamentoTratamiento", b =>
                {
                    b.HasOne("BackendSistemaHospital.Models.Medicamento", "Medicamento")
                        .WithMany("MedicamentoTratamientos")
                        .HasForeignKey("MedicamentoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BackendSistemaHospital.Models.Tratamiento", "Tratamiento")
                        .WithMany("MedicamentoTratamientos")
                        .HasForeignKey("TratamientoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BackendSistemaHospital.Models.SignoVital", b =>
                {
                    b.HasOne("BackendSistemaHospital.Models.Persona", "Persona")
                        .WithMany("SignosVitales")
                        .HasForeignKey("PersonaIdPersona");
                });

            modelBuilder.Entity("BackendSistemaHospital.Models.Tratamiento", b =>
                {
                    b.HasOne("BackendSistemaHospital.Models.Receta", "Receta")
                        .WithMany("Tratamientos")
                        .HasForeignKey("RecetaIdReceta");
                });
#pragma warning restore 612, 618
        }
    }
}
